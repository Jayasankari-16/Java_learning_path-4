/* There are N tasks waiting in line to be executed. The execution time for the i th task is Ai seconds.
Chef has two processors to execute these N tasks. Both these processors work simultaneously. Each processor executes the assigned tasks one by one.
Chef assigns a prefix of these tasks to the first processor and the remaining tasks to the second processor.
For example, if there are 3 tasks, Chef can do one of the following:
Assign no task to the first processor. This means, the second processor will execute tasks 
1,2 and 3.Assign task 1 to the first processor. This means, the second processor will execute tasks 2 and 3.Assign tasks 1 and 2 to the first processor. 
This means, the second processor will execute task 3.Assign tasks 1,2 and 3 to the first processor.
Thus, second processor would execute no tasks.Find the minimum time in which all the tasks can be executed.*/

import java.util.*;
import java.lang.*;
import java.io.*;

class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		while(t-->0){
		    int n=sc.nextInt();
		     long a[]=new long[n];
		     for(int i=0;i<n;i++){
		         a[i]=sc.nextLong();
		     }
		     if(n==1){
		         System.out.println(a[0]);
		     }
		     else if(n ==2){
		         System.out.println(Math.max(a[0] ,a[1]));
		     }
		     else{
		         long a1=a[0];
		         long a2=a[n-1];
		         
		         int i=1;
		         int j=n-2;
		         while(i<=j){
		             if(a1 <= a2){
		                 a1+=a[i];
		                 i++;
		             }
		             else{
		                 a2+=a[j];
		                 j--;
		             }
		         }
		         System.out.println(Math.max(a1 ,a2));
		     }
		}
	}
}
